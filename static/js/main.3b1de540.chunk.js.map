{"version":3,"sources":["common/values.ts","components/utils.ts","components/info/ChangeCoordinatesCard.tsx","components/info/CoordinatesCard.tsx","components/info/ChangeMisiurewiczCard.tsx","components/info/InfoDialog.tsx","dist/clientDetect.js","shaders/newSmoothJuliaShader.js","components/settings/SettingsDefinitions.tsx","components/settings/SettingsContext.tsx","theme/theme.tsx","shaders/fullVertexShader.js","components/render/WebGLCanvas.tsx","components/render/MinimapViewer.tsx","components/render/JuliaRenderer.tsx","shaders/newSmoothMandelbrotShader.ts","components/info/FPSCard.tsx","components/render/MandelbrotRenderer.tsx","serviceWorker.js","components/ServiceWorkerWrapper.tsx","components/settings/SettingsMenu.tsx","App.tsx","index.tsx"],"names":["startPos","viewerOrigin","xy","z","theta","springsConfigs","default","mass","tension","friction","zoom","rot","user","genericTouchBind","domTarget","controls","screenScaleMultiplier","setDragging","xyCtrl","setControlXY","zoomCtrl","minZoom","maxZoom","setControlZoom","rotCtrl","handlers","onDragStart","event","preventDefault","onPinchStart","onPinch","vdva","down","dx","delta","origin","first","memo","getValue","newZ","newZclamp","_","clamp","config","onWheel","my","movement","active","onDrag","direction","pinching","velocity","cancel","last","realZoom","current","height","vScale","relMove","t","addV","vRotate","eventOptions","passive","capture","warpToPoint","immediate","undefined","ChangeCoordinatesCard","props","useState","x","setX","y","setY","setZoom","setTheta","Grow","in","show","Card","style","width","zIndex","position","padding","display","flexDirection","flexShrink","Grid","container","alignItems","TextField","size","onChange","e","Number","target","value","label","justify","Button","marginTop","onClick","mandelbrot","CoordinatesCard","marginBottom","Typography","align","fontFamily","fontSize","span","interpolate","toFixed","ChangeMisiurewiczCard","React","animationState","setAnimationState","pointToAnimate","setPointToAnimate","showReset","setOpenReset","showTranslation","setOpenT","showMagnification","setOpenM","showRotation","setOpenR","messageTranslation","setMessageT","messageMagnification","setMessageM","messageRotation","setMessageR","handleClose","reason","fontWeight","misiurewiczPoints","map","m","fullWidth","pos","julia","toString","Snackbar","anchorOrigin","vertical","horizontal","open","onClose","autoHideDuration","message","DialogTitle","withStyles","theme","createStyles","root","margin","spacing","image","marginRight","closeButton","marginLeft","color","palette","grey","children","classes","other","disableTypography","className","src","alt","variant","IconButton","aria-label","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","Alert","elevation","InfoDialog","ctrl","setOpen","snackBarOpen","setSnackBarOpen","clientData","window","screenSize","screen","nameOffset","verOffset","ix","nVer","navigator","appVersion","nAgt","userAgent","browser","appName","version","parseFloat","majorVersion","parseInt","indexOf","substring","lastIndexOf","toLowerCase","toUpperCase","isNaN","mobile","test","cookieEnabled","document","cookie","os","clientStrings","s","r","id","cs","osVersion","exec","gl","debugInfo","gpuVendor","renderer","system","device","canvas","createElement","getContext","getExtension","getParameter","UNMASKED_VENDOR_WEBGL","UNMASKED_RENDERER_WEBGL","browserVersion","browserRelease","platform","dpr","devicePixelRatio","gpu","clientDetect","Dialog","aria-labelledby","maxWidth","dividers","gutterBottom","Link","href","Divider","Box","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","colSpan","TableBody","Object","entries","k","v","key","String","data","console","log","clipboard","writeText","prompt","writeToClipboard","JSON","stringify","startIcon","severity","surveyLink","rel","textDecoration","autoFocus","newSmoothJuliaShader","maxI","AA","B","settingsWidgets","settings","showMinimap","checked","control","Switch","showCrosshair","showCoordinates","showMisiurewiczPoints","labelPlacement","Slider","min","max","step","valueLabelDisplay","marks","useDPR","useAA","showFPS","defaultSettings","SettingsContext","createContext","setSettings","SettingsProvider","Provider","createMuiTheme","MuiSwitch","MuiButton","primary","main","colors","blue","secondary","red","info","fullscreenVertexArray","numComponents","WebGLCanvas","forwardRef","refAny","canvasRef","useRef","renderRequestRef","bufferInfo","programInfo","u","setFps","fps","useCallback","mini","currZoom","useEffect","twgl","fragShader","then","frames","elapsedTime","render","time","viewport","uniforms","resolution","u_zoom","u_c","c","u_xy","u_maxI","u_theta","myValues","misiurewiczFlat","useProgram","program","requestAnimationFrame","cancelAnimationFrame","ref","cursor","dragging","displayName","MinimapViewer","rest","ButtonBase","left","bottom","borderRadius","boxShadow","overflow","JuliaRenderer","miniCanvasRef","miniFragShader","gtb","touchBind","useGesture","Consumer","makeCrosshair","stroke","radius","standardCrosshair","miniCrosshair","newSmoothMandelbrotShader","showM","crosshairShape","FPSCard","top","userSelect","div","MandelbrotRenderer","isLocalhost","Boolean","location","hostname","match","register","URL","process","addEventListener","swUrl","fetch","response","contentType","headers","get","status","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ServiceWorkerWrapper","showReload","setShowReload","waitingWorker","setWaitingWorker","onSWUpdate","waiting","action","postMessage","type","useStyles","makeStyles","right","button","sliderControl","GroupDivider","GroupTitle","title","SettingsMenu","anchorEl","setAnchorEl","ResetButton","aria-controls","reset","AboutButton","toggleInfo","Fab","aria-haspopup","currentTarget","Backdrop","Popover","keepMounted","transformOrigin","paddingLeft","paddingRight","paddingTop","paddingBottom","item","name","widgets","getSettingsWidgetsGrouping","g","FormGroup","widget","FormControlLabel","val","prevState","App","isClient","getSize","innerWidth","innerHeight","windowSize","setWindowSize","handleResize","removeEventListener","useWindowSize","mandelbrotControls","useSpring","juliaControls","showInfo","setShowInfo","ThemeProvider","xs","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.3b1de540.chunk.js","sourcesContent":["import { ViewerLocation } from './types';\r\n\r\nexport const startPos: [number, number] = [-0.7746931, 0.1242266];\r\nexport const startZoom = 85.0;\r\nexport const startTheta = 0.6;\r\nexport const screenScaleMultiplier = 1e-7;\r\n\r\nexport const viewerOrigin: ViewerLocation = {\r\n  xy: [0, 0],\r\n  z: 1,\r\n  theta: 0,\r\n};\r\n\r\nexport const springsConfigs = {\r\n  default: {\r\n    /** used when the values are animated to a point, includes decay */\r\n    xy: { mass: 1, tension: 500, friction: 75 },\r\n    zoom: { mass: 1, tension: 300, friction: 40 },\r\n    rot: { mass: 1, tension: 400, friction: 75 },\r\n  },\r\n  user: {\r\n    /** used when a user is interacting with the view */\r\n    xy: { mass: 1, tension: 2000, friction: 100 },\r\n    zoom: { mass: 1, tension: 700, friction: 60 },\r\n    rot: { mass: 1, tension: 400, friction: 75 },\r\n  },\r\n  // default and decay are merged to give them single \"non-user\" values\r\n  // decay: {\r\n  //   /** used after the user has let go of the view, decaying */\r\n  //   xy: { mass: 1, tension: 500, friction: 75 },\r\n  //   zoom: { mass: 1, tension: 300, friction: 50 },\r\n  //   rot: { mass: 1, tension: 400, friction: 75 },\r\n  // },\r\n};\r\n\r\n// export const defaultSpringConfig = { mass: 1, tension: 100, friction: 200 };\r\n\r\n// export const xyCtrlSpringConfig = { mass: 1, tension: 2000, friction: 100 };\r\n// export const xyCtrlSpringDecayConfig = { mass: 1, tension: 500, friction: 75 };\r\n","import _ from 'lodash';\r\nimport { RefObject, useCallback, useEffect, useState } from 'react';\r\nimport { addV } from 'react-use-gesture';\r\nimport {\r\n  FullGestureState,\r\n  StateKey,\r\n  UseGestureConfig,\r\n  UserHandlersPartial,\r\n} from 'react-use-gesture/dist/types';\r\nimport { Vector, vRotate, vScale } from 'vec-la-fp';\r\nimport { ViewerControlSprings, ViewerLocation } from '../common/types';\r\nimport { screenScaleMultiplier, springsConfigs } from '../common/values';\r\n\r\n// https://usehooks.com/useWindowSize/\r\nexport function useWindowSize(): { width?: number; height?: number } {\r\n  const isClient = typeof window === 'object';\r\n\r\n  const getSize = useCallback(\r\n    () => ({\r\n      width: isClient ? window.innerWidth : undefined,\r\n      height: isClient ? window.innerHeight : undefined,\r\n    }),\r\n    [isClient],\r\n  );\r\n\r\n  const [windowSize, setWindowSize] = useState(getSize);\r\n\r\n  useEffect(() => {\r\n    if (!isClient) {\r\n      // return false;\r\n      return () => {\r\n        // do nothing\r\n      };\r\n    }\r\n\r\n    function handleResize() {\r\n      setWindowSize(getSize());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, [getSize, isClient]); // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  return windowSize;\r\n}\r\n\r\nexport interface GenericTouchBindParams {\r\n  domTarget: RefObject<HTMLCanvasElement>;\r\n  controls: ViewerControlSprings;\r\n  screenScaleMultiplier: number;\r\n  // gl: any,\r\n  setDragging: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport interface GenericTouchBindReturn {\r\n  handlers: UserHandlersPartial;\r\n  config: UseGestureConfig;\r\n}\r\n\r\n// a touchbind for re-using across renderers\r\nexport function genericTouchBind({\r\n  domTarget,\r\n  controls,\r\n  screenScaleMultiplier,\r\n  setDragging,\r\n}: GenericTouchBindParams): GenericTouchBindReturn {\r\n  const [{ xy }, setControlXY] = controls.xyCtrl;\r\n  const [{ z, minZoom, maxZoom }, setControlZoom] = controls.zoomCtrl;\r\n  const [{ theta }] = controls.rotCtrl;\r\n  return {\r\n    handlers: {\r\n      // prevent some browser events such as swipe-based navigation or\r\n      // pinch-based zoom and instead redirect them to this handler\r\n      onDragStart: ({ event }: FullGestureState<StateKey<'drag'>>) =>\r\n        event?.preventDefault(),\r\n      onPinchStart: ({ event }: FullGestureState<StateKey<'pinch'>>) =>\r\n        event?.preventDefault(),\r\n\r\n      onPinch: ({\r\n        vdva: [vd],\r\n        down,\r\n        delta: [dx],\r\n        origin,\r\n        first,\r\n        memo = [xy.getValue()],\r\n      }: FullGestureState<StateKey<'pinch'>>) => {\r\n        if (first) {\r\n          const [p] = memo;\r\n          return [p, origin];\r\n        }\r\n        const zoom = z.getValue();\r\n        // initial origin access\r\n        // let [p, initialOrigin] = memo;\r\n        const newZ = zoom * (1 + dx * 3e-2);\r\n        const newZclamp = _.clamp(newZ, minZoom.getValue(), maxZoom.getValue());\r\n\r\n        // let realZoom = gl.current.canvas.height * newZclamp * screenScaleMultiplier;\r\n        // let plotMovement = scale(subV(origin, initialOrigin), -2/realZoom);\r\n        // let relMove = [plotMovement[0], -plotMovement[1]];\r\n\r\n        setControlZoom({\r\n          z: newZclamp,\r\n          config: down ? springsConfigs.user.zoom : springsConfigs.default.zoom,\r\n          // immediate: true,\r\n          // config: {\r\n          //   // value needs revising, currently too slow\r\n          //   velocity: 10 * vd,\r\n          // },\r\n        });\r\n\r\n        // setControlPos({\r\n        //   pos: addV(p, relMove),                    // add the displacement to the starting position\r\n        //   immediate: down,                                  // immediately apply if the gesture is active\r\n        // });\r\n\r\n        return memo;\r\n      },\r\n\r\n      onWheel: ({ movement: [, my], active }: FullGestureState<StateKey<'wheel'>>) => {\r\n        const zoom = z.getValue();\r\n        // set different multipliers based on zoom direction\r\n        //                              zoom     in      out\r\n        const newZ = zoom * (1 - my * (my < 0 ? 1.5e-3 : 8e-4));\r\n\r\n        setControlZoom({\r\n          z: _.clamp(newZ, minZoom.getValue(), maxZoom.getValue()),\r\n          config: active ? springsConfigs.user.zoom : springsConfigs.default.zoom,\r\n          // immediate: active,\r\n          // config: {\r\n          //   // velocity: active ? 0 : 50,\r\n          // },\r\n        });\r\n\r\n        return zoom;\r\n      },\r\n\r\n      onDrag: ({\r\n        down,\r\n        movement,\r\n        direction: [dx, dy],\r\n        velocity,\r\n        pinching,\r\n        last,\r\n        cancel,\r\n        memo = { xy: xy.getValue(), theta: theta.getValue() },\r\n      }: FullGestureState<StateKey<'drag'>>) => {\r\n        // let pinch handle movement\r\n        if (pinching) cancel && cancel();\r\n        // change according to this formula:\r\n        // move (x, y) in the opposite direction of drag (pan with cursor)\r\n        // divide by canvas size to scale appropriately\r\n        // multiply by 2 to correct scaling on viewport (?)\r\n        // use screen multiplier for more granularity\r\n        const realZoom =\r\n          (domTarget.current?.height || 100) * z.getValue() * screenScaleMultiplier;\r\n\r\n        const [px, py]: Vector = vScale(-2 / realZoom, movement);\r\n        // const relMove: Vector = vScale(2 / realZoom, movement);\r\n\r\n        const relMove: Vector = [px, -py];\r\n        // const relDir: Vector = [dx, -dy];\r\n\r\n        const t = theta.getValue();\r\n\r\n        setControlXY({\r\n          // add to the current position the relative displacement (relMove), rotated by theta,\r\n          // to maintain the correct displacement direction (without this it would move as if theta=0)\r\n          xy: addV(memo.xy, vRotate(t, relMove)), // add the displacement to the starting position\r\n          // immediate: down, // immediately apply if the gesture is active\r\n          config: down ? springsConfigs.user.xy : springsConfigs.default.xy,\r\n          //  {\r\n          //   // velocity also needs to be rotated according to theta\r\n          //   // -@ts-expect-error - velocity should be `[number, number]`, but only `number` allowed\r\n          //   // velocity: vScale(-velocity / realZoom, vRotate(t, relDir)), // set the velocity (gesture momentum)\r\n          //   // velocity: vMag(vScale(-velocity / realZoom, vRotate(t, relDir))), // set the velocity (gesture momentum)\r\n          //   // velocity: velocity / screenScaleMultiplier, // set the velocity (gesture momentum)\r\n          //   // mass: down ? 1 : 5,\r\n          //   ...xyCtrlSpringConfig,\r\n          //   tension: down ? xyCtrlSpringConfig.tension : xyCtrlSpringConfig.tension / 2,\r\n          //   // -@ts-expect-error - decay is undocumented?\r\n          //   // decay: true,\r\n          // },\r\n        });\r\n\r\n        // tell the renderer that it's being dragged on\r\n        setDragging(down);\r\n\r\n        return memo;\r\n      },\r\n    },\r\n    config: {\r\n      eventOptions: { passive: false, capture: false },\r\n      domTarget: domTarget,\r\n      // The config object passed to useGesture has drag, wheel, scroll, pinch and move keys\r\n      // for specific gesture options. See here for more details.\r\n      // drag: {\r\n      //   bounds,\r\n      //   rubberband: true,\r\n      // }\r\n    },\r\n  };\r\n}\r\n\r\n/**\r\n * Warps the given controller to a desired viewer location.\r\n * @param controls The controller to be animated\r\n * @param location The (partial) viewer location to warp to: xy, zoom, theta\r\n * @param immediate Should the update happen immediately? (Useful for testing)\r\n */\r\nexport function warpToPoint(\r\n  controls: ViewerControlSprings,\r\n  { xy, z, theta }: Partial<ViewerLocation>,\r\n  immediate = false,\r\n): void {\r\n  // can't do a simple \"if (x)\" check since values could be zero (evaluates to \"false\")\r\n  if (xy !== undefined) {\r\n    controls.xyCtrl[1]({\r\n      // use screen scale multiplier for a simpler API\r\n      xy: vScale(1 / screenScaleMultiplier, xy),\r\n      config: springsConfigs.default.xy,\r\n      immediate: immediate,\r\n    });\r\n  }\r\n  if (z !== undefined) {\r\n    controls.zoomCtrl[1]({\r\n      z: z,\r\n      config: springsConfigs.default.zoom,\r\n      immediate: immediate,\r\n    });\r\n  }\r\n  if (theta !== undefined) {\r\n    controls.rotCtrl[1]({\r\n      theta: theta,\r\n      config: springsConfigs.default.rot,\r\n      immediate: immediate,\r\n    });\r\n  }\r\n}\r\n","import { Button, Card, Grid, Grow, TextField } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { ChangeCoordinatesCardProps } from '../../common/info';\r\nimport { startPos, startTheta, startZoom } from '../../common/values';\r\nimport { warpToPoint } from '../utils';\r\n\r\nconst ChangeCoordinatesCard = (props: ChangeCoordinatesCardProps): JSX.Element => {\r\n  const [x, setX] = useState(startPos[0]);\r\n  const [y, setY] = useState(startPos[1]);\r\n  const [zoom, setZoom] = useState(startZoom);\r\n  const [theta, setTheta] = useState(startTheta);\r\n\r\n  return (\r\n    <Grow in={props.show}>\r\n      <Card\r\n        style={{\r\n          width: 'auto',\r\n          zIndex: 1300,\r\n          position: 'relative',\r\n          padding: 8,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          flexShrink: 1,\r\n          // display: props.show ? 'block' : 'none',\r\n          // borderRadius: 100,\r\n        }}\r\n      >\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <TextField\r\n            size=\"small\"\r\n            style={{ width: '12ch' }}\r\n            onChange={(e) => setX(Number(e.target.value))}\r\n            value={x}\r\n            label=\"x\"\r\n          />\r\n          <TextField\r\n            size=\"small\"\r\n            style={{ width: '12ch' }}\r\n            onChange={(e) => setY(Number(e.target.value))}\r\n            value={y}\r\n            label=\"y\"\r\n          />\r\n          <Grid container direction=\"row\" justify=\"space-around\">\r\n            <TextField\r\n              size=\"small\"\r\n              style={{ width: '5ch' }}\r\n              onChange={(e) => setZoom(Number(e.target.value))}\r\n              value={zoom}\r\n              label=\"zoom\"\r\n            />\r\n            <TextField\r\n              size=\"small\"\r\n              style={{ width: '3ch' }}\r\n              onChange={(e) => setTheta(Number(e.target.value))}\r\n              value={theta}\r\n              label=\"theta\"\r\n            />\r\n          </Grid>\r\n          <Button\r\n            style={{ marginTop: 12 }}\r\n            onClick={() =>\r\n              warpToPoint(props.mandelbrot, { xy: [x, y], z: zoom, theta: theta })\r\n            }\r\n          >\r\n            Go\r\n          </Button>\r\n        </Grid>\r\n      </Card>\r\n    </Grow>\r\n  );\r\n};\r\n\r\nexport default ChangeCoordinatesCard;\r\n","import { Card, Grow, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { animated } from 'react-spring';\r\nimport { CoordinatesCardProps } from '../../common/info';\r\nimport { screenScaleMultiplier } from '../../common/values';\r\n\r\nconst CoordinatesCard = (props: CoordinatesCardProps): JSX.Element => {\r\n  return (\r\n    <Grow in={props.show}>\r\n      <Card\r\n        style={{\r\n          width: 'auto',\r\n          zIndex: 1300,\r\n          position: 'relative',\r\n          padding: '6px 12px',\r\n          marginBottom: 8,\r\n          // display: props.show ? 'block' : 'none',\r\n          // borderRadius: 100,\r\n        }}\r\n      >\r\n        <Typography align=\"right\" style={{ fontFamily: 'monospace', fontSize: '1.2rem' }}>\r\n          {/* https://www.typescriptlang.org/docs/handbook/basic-types.html#tuple */}\r\n          {/* https://www.typescriptlang.org/docs/handbook/2/objects.html#tuple-types */}\r\n          <animated.span>\r\n            {props.mandelbrot.xy.interpolate(\r\n              // @ts-expect-error: Function call broken in TS, waiting till react-spring v9 to fix\r\n              (x, y) => `${(x * screenScaleMultiplier).toFixed(7)} : x`,\r\n            )}\r\n          </animated.span>\r\n          <br />\r\n          <animated.span>\r\n            {props.mandelbrot.xy.interpolate(\r\n              // @ts-expect-error: Function call broken in TS, waiting till react-spring v9 to fix\r\n              (x, y) => `${(y * screenScaleMultiplier).toFixed(7)} : y`,\r\n            )}\r\n          </animated.span>\r\n          <br />\r\n          <animated.span>\r\n            {props.mandelbrot.zoom.interpolate((z) => `${z.toFixed(2)} : z`)}\r\n          </animated.span>\r\n          <br />\r\n          <animated.span>\r\n            {props.mandelbrot.theta.interpolate((t) => `${t.toFixed(3)} : t`)}\r\n          </animated.span>\r\n        </Typography>\r\n      </Card>\r\n    </Grow>\r\n  );\r\n};\r\n\r\nexport default CoordinatesCard;\r\n\r\n// <Card\r\n//   style={{\r\n//     width: 'auto',\r\n//     position: 'absolute',\r\n//     zIndex: 2,\r\n//     right: 0,\r\n//     top: 0,\r\n//     margin: 20,\r\n//     padding: 8,\r\n//     display: settings.coords[0] ? 'block' : 'none',\r\n//     // borderRadius: 100,\r\n//   }}\r\n// >\r\n//   <Typography align=\"right\">\r\n//     {/* https://www.typescriptlang.org/docs/handbook/basic-types.html#tuple */}\r\n//     {/* https://www.typescriptlang.org/docs/handbook/2/objects.html#tuple-types */}\r\n//     <animated.span>\r\n//       {mandelbrotControls.xyCtrl[0].xy.interpolate(\r\n//         // @ts-expect-error: Function call broken in TS, waiting till react-spring v9 to fix\r\n//         (x, y) => `${(x * screenScaleMultiplier).toFixed(7)} : x`,\r\n//       )}\r\n//     </animated.span>\r\n//     <br />\r\n//     <animated.span>\r\n//       {mandelbrotControls.xyCtrl[0].xy.interpolate(\r\n//         // @ts-expect-error: Function call broken in TS, waiting till react-spring v9 to fix\r\n//         (x, y) => `${(y * screenScaleMultiplier).toFixed(7)} : y`,\r\n//       )}\r\n//     </animated.span>\r\n//   </Typography>\r\n// </Card>;\r\n","import { Button, Card, Grid, Grow, Snackbar } from '@material-ui/core';\nimport React from 'react';\nimport { ChangeMisiurewiczCardProps } from '../../common/info';\nimport { misiurewiczPoints } from '../../App';\nimport { warpToPoint } from '../utils';\n\nconst ChangeMisiurewiczCard = (props: ChangeMisiurewiczCardProps): JSX.Element => {\n  const [animationState, setAnimationState] = React.useState(0);\n  const [pointToAnimate, setPointToAnimate] = React.useState([0, 0]);\n\n  const [showReset, setOpenReset] = React.useState(false);\n  const [showTranslation, setOpenT] = React.useState(false);\n  const [showMagnification, setOpenM] = React.useState(false);\n  const [showRotation, setOpenR] = React.useState(false);\n\n  const [messageTranslation, setMessageT] = React.useState('not set');\n  const [messageMagnification, setMessageM] = React.useState('not set');\n  const [messageRotation, setMessageR] = React.useState('not set');\n\n  const handleClose = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string,\n  ) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenReset(false);\n    setOpenT(false);\n    setOpenM(false);\n    setOpenR(false);\n  };\n\n  const go = (pos: [number, number], zoom: number, theta: number) => {\n    // If the user has clicked on a different point to the one we are currently animating\n    if (pos[0] !== pointToAnimate[0] && pos[1] !== pointToAnimate[1]) {\n      setAnimationState(0);\n      setPointToAnimate(pos);\n      setMessageT(`Translating to ${pos}`);\n      setMessageM(`Magnifying ${zoom}x`);\n      setMessageR(`Rotating by ${theta} radians`);\n    } else if (animationState === 0) {\n      setOpenReset(true);\n      warpToPoint(props.mandelbrot, { xy: [-0.45, 0], z: 0.8, theta: 0 });\n      warpToPoint(props.julia, { xy: [-0.45, 0], z: 0.8, theta: 0 });\n      setAnimationState(1);\n    } else if (animationState === 1) {\n      setOpenT(true);\n      warpToPoint(props.mandelbrot, { xy: pos, z: 1, theta: 0 });\n      warpToPoint(props.julia, { xy: pos, z: 1, theta: 0 });\n      setAnimationState(2);\n    } else if (animationState === 2) {\n      setOpenM(true);\n      warpToPoint(props.mandelbrot, { xy: pos, z: zoom, theta: 0 });\n      warpToPoint(props.julia, { xy: pos, z: zoom, theta: 0 });\n      setAnimationState(3);\n    } else if (animationState === 3) {\n      setOpenR(true);\n      warpToPoint(props.mandelbrot, { xy: pos, z: zoom, theta: theta });\n      warpToPoint(props.julia, { xy: pos, z: zoom, theta: 0 });\n      setAnimationState(4);\n    }\n  };\n\n  return (\n    <Grow in={props.show}>\n      <Card\n        style={{\n          width: 'auto',\n          zIndex: 1300,\n          position: 'relative',\n          padding: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          flexShrink: 1,\n          // display: props.show ? 'block' : 'none',\n          // borderRadius: 100,\n        }}\n      >\n        <Grid container direction=\"column\" alignItems=\"center\">\n          <div style={{ marginTop: 12, fontWeight: 'bold' }}>Misiurewicz points</div>\n          {misiurewiczPoints.map((m) => (\n            <Button\n              fullWidth\n              style={{ marginTop: 12 }}\n              onClick={() => go(m[0], m[1], m[2])}\n            >\n              {m[0].toString()}\n            </Button>\n          ))}\n          <Snackbar\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'center',\n            }}\n            open={showReset}\n            onClose={handleClose}\n            autoHideDuration={3000}\n            message={'Resetting'}\n          />\n          <Snackbar\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'center',\n            }}\n            open={showTranslation}\n            onClose={handleClose}\n            autoHideDuration={3000}\n            message={messageTranslation}\n          />\n          <Snackbar\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'center',\n            }}\n            open={showMagnification}\n            onClose={handleClose}\n            autoHideDuration={3000}\n            message={messageMagnification}\n          />\n          <Snackbar\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'center',\n            }}\n            open={showRotation}\n            onClose={handleClose}\n            autoHideDuration={3000}\n            message={messageRotation}\n          />\n        </Grid>\n      </Card>\n    </Grow>\n  );\n};\n\nexport default ChangeMisiurewiczCard;\n","import React, { PropsWithChildren, useState } from 'react';\r\nimport { createStyles, Theme, WithStyles, withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n  Link,\r\n  TableContainer,\r\n  Table,\r\n  Paper,\r\n  TableRow,\r\n  TableCell,\r\n  TableHead,\r\n  TableBody,\r\n  Box,\r\n  Divider,\r\n  Snackbar,\r\n} from '@material-ui/core';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\nimport { surveyLink } from '../surveyLink.json';\r\n\r\n// for evaluating build time\r\nimport preval from 'preval.macro';\r\nimport clientDetect from '../../dist/clientDetect';\r\n\r\nconst dateTimeStamp = preval`module.exports = new Date();`;\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2),\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      // align: \"middle\",\r\n    },\r\n    image: {\r\n      marginTop: 'auto',\r\n      marginBottom: 'auto',\r\n      marginRight: 8,\r\n      height: 50,\r\n    },\r\n    closeButton: {\r\n      // position: 'absolute',\r\n      // right: theme.spacing(1),\r\n      // top: theme.spacing(1),\r\n      marginLeft: 'auto',\r\n      color: theme.palette.grey[500],\r\n    },\r\n  });\r\n\r\nexport interface DialogTitleProps extends PropsWithChildren<WithStyles<typeof styles>> {\r\n  onClose: () => void;\r\n  id: string;\r\n}\r\n\r\n// https://material-ui.com/guides/typescript/#usage-of-withstyles\r\nconst DialogTitle = withStyles(styles)(\r\n  ({ children, classes, onClose, ...other }: DialogTitleProps) => {\r\n    return (\r\n      <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n        <img src=\"logo-512.png\" alt=\"Mandelbrot Maps logo\" className={classes.image} />\r\n        <Typography\r\n          variant=\"h1\"\r\n          style={{ fontSize: 24, marginTop: 'auto', marginBottom: 'auto' }}\r\n        >\r\n          {children}\r\n        </Typography>\r\n        {onClose ? (\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            className={classes.closeButton}\r\n            onClick={onClose}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </MuiDialogTitle>\r\n    );\r\n  },\r\n);\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nfunction Alert(props: AlertProps) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function InfoDialog(props: any) {\r\n  const [open, setOpen] = props.ctrl;\r\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\r\n\r\n  const handleClose = () => setOpen(false);\r\n  // const showSnackBar = () => {\r\n  // new Promise(() => {\r\n  // setSnackBarOpen(false);\r\n  // }).then(() => {\r\n  // setSnackBarOpen(true);\r\n  // });\r\n  // };\r\n\r\n  // guard against null / undefined window\r\n  const clientData = clientDetect(window);\r\n  // const clientData = window.jscd || {};\r\n\r\n  const writeToClipboard = (data: string) => {\r\n    console.log(snackBarOpen);\r\n    try {\r\n      navigator.clipboard.writeText(data);\r\n      setSnackBarOpen(true);\r\n    } catch (e) {\r\n      window.prompt('Auto copy to clipboard failed, copy manually from below:', data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"customized-dialog-title\"\r\n      open={open}\r\n      maxWidth=\"md\"\r\n    >\r\n      {/* <div style={{ maxWidth: 700 }}> */}\r\n      <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n        Mandelbrot Maps\r\n      </DialogTitle>\r\n      <DialogContent dividers style={{ maxWidth: 700 }}>\r\n        <Typography gutterBottom>\r\n          Mandelbrot Maps is an interactive fractal explorer built using React and WebGL.\r\n        </Typography>\r\n        <Typography gutterBottom>\r\n          Developed by{' '}\r\n          <Link href=\"https://jmaio.github.io/\" target=\"_blank\">\r\n            Joao Maio\r\n          </Link>{' '}\r\n          in 2019/2020 as part of an Honours Project at The University of Edinburgh, under\r\n          the supervision of Philip Wadler.\r\n        </Typography>\r\n        <Typography gutterBottom>\r\n          The project was simultaneously undertaken by Freddie Bawden, also under the\r\n          supervision of Philip Wadler. Freddie's version of the project is available at:{' '}\r\n          <Link href=\"http://mmaps.freddiejbawden.com/\" target=\"_blank\">\r\n            mmaps.freddiejbawden.com\r\n          </Link>\r\n        </Typography>\r\n        <Typography gutterBottom>\r\n          The{' '}\r\n          <Link\r\n            href=\"https://homepages.inf.ed.ac.uk/wadler/mandelbrot-maps/index.html\"\r\n            target=\"_blank\"\r\n          >\r\n            original Mandelbrot Maps project\r\n          </Link>{' '}\r\n          was developed by Iain Parris in 2008 as a Java Applet.\r\n        </Typography>\r\n        <Typography gutterBottom>\r\n          Mandelbrot set shader code adapted from{' '}\r\n          <Link href=\"https://www.shadertoy.com/view/4df3Rn\">Mandelbrot - smooth</Link> by{' '}\r\n          <Link href=\"http://iquilezles.org/\" target=\"_blank\">\r\n            Inigo Quilez\r\n          </Link>\r\n          .\r\n        </Typography>\r\n        {/* <Typography>\r\n            &copy; Joao Maio 2020\r\n          </Typography> */}\r\n\r\n        <Divider style={{ marginTop: 30, marginBottom: 30 }} />\r\n\r\n        <Box style={{ display: 'flex' }}>\r\n          <TableContainer\r\n            component={Paper}\r\n            style={{ width: 'auto', margin: 'auto', maxWidth: 460 }}\r\n          >\r\n            <Table size=\"small\" aria-label=\"a dense table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\" colSpan={2} variant=\"head\">\r\n                    Device properties\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {Object.entries(clientData).map(([k, v]) => (\r\n                  <TableRow key={k}>\r\n                    <TableCell>{k}</TableCell>\r\n                    <TableCell align=\"right\" style={{ fontFamily: 'monospace' }}>\r\n                      {String(v)}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Box>\r\n\r\n        <Divider style={{ marginTop: 30, marginBottom: 30 }} />\r\n\r\n        <Box style={{ display: 'flex' }}>\r\n          <Typography variant=\"overline\" align=\"center\" style={{ margin: 'auto' }}>\r\n            Build:\r\n            <Typography style={{ fontFamily: 'monospace' }}>{dateTimeStamp}</Typography>\r\n            {/* {console.log(new Date(dateTimeStamp).toLocaleString('en-GB', { timeZone: 'UTC' }))} */}\r\n          </Typography>\r\n        </Box>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button\r\n          onClick={() => {\r\n            writeToClipboard(JSON.stringify(clientData));\r\n          }}\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          startIcon={<FileCopyIcon />}\r\n        >\r\n          Copy\r\n        </Button>\r\n        <Snackbar\r\n          open={snackBarOpen}\r\n          autoHideDuration={5000}\r\n          // onClose={() => setSnackBarOpen(false)}\r\n        >\r\n          <Alert onClose={() => setSnackBarOpen(false)} severity=\"info\">\r\n            Device properties copied!\r\n          </Alert>\r\n        </Snackbar>\r\n        <Link\r\n          href={surveyLink}\r\n          target=\"_blank\"\r\n          rel=\"noopener\"\r\n          style={{ textDecoration: 'none' }}\r\n        >\r\n          <Button autoFocus color=\"primary\" variant=\"outlined\" startIcon={<LaunchIcon />}>\r\n            Feedback\r\n          </Button>\r\n        </Link>\r\n      </DialogActions>\r\n      {/* </div> */}\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable */\r\n/**\r\n * JavaScript Client Detection\r\n * (C) viazenetti GmbH (Christian Ludwig)\r\n */\r\nexport default function clientDetect(window) {\r\n  var unknown = '-';\r\n\r\n  // screen\r\n  var screenSize = '';\r\n  if (window.screen.width) {\r\n    var width = window.screen.width ? window.screen.width : '';\r\n    var height = window.screen.height ? window.screen.height : '';\r\n    screenSize += '' + width + ' x ' + height;\r\n  }\r\n\r\n  // browser\r\n  var nVer = navigator.appVersion;\r\n  var nAgt = navigator.userAgent;\r\n  var browser = navigator.appName;\r\n  var version = '' + parseFloat(navigator.appVersion);\r\n  var majorVersion = parseInt(navigator.appVersion, 10);\r\n  var nameOffset, verOffset, ix;\r\n\r\n  // Opera\r\n  if ((verOffset = nAgt.indexOf('Opera')) != -1) {\r\n    browser = 'Opera';\r\n    version = nAgt.substring(verOffset + 6);\r\n    if ((verOffset = nAgt.indexOf('Version')) != -1) {\r\n      version = nAgt.substring(verOffset + 8);\r\n    }\r\n  }\r\n  // Opera Next\r\n  if ((verOffset = nAgt.indexOf('OPR')) != -1) {\r\n    browser = 'Opera';\r\n    version = nAgt.substring(verOffset + 4);\r\n  }\r\n  // Edge\r\n  else if ((verOffset = nAgt.indexOf('Edge')) != -1) {\r\n    browser = 'Microsoft Edge';\r\n    version = nAgt.substring(verOffset + 5);\r\n  }\r\n  // MSIE\r\n  else if ((verOffset = nAgt.indexOf('MSIE')) != -1) {\r\n    browser = 'Microsoft Internet Explorer';\r\n    version = nAgt.substring(verOffset + 5);\r\n  }\r\n  // Chrome\r\n  else if ((verOffset = nAgt.indexOf('Chrome')) != -1) {\r\n    browser = 'Chrome';\r\n    version = nAgt.substring(verOffset + 7);\r\n  }\r\n  // Safari\r\n  else if ((verOffset = nAgt.indexOf('Safari')) != -1) {\r\n    browser = 'Safari';\r\n    version = nAgt.substring(verOffset + 7);\r\n    if ((verOffset = nAgt.indexOf('Version')) != -1) {\r\n      version = nAgt.substring(verOffset + 8);\r\n    }\r\n  }\r\n  // Firefox\r\n  else if ((verOffset = nAgt.indexOf('Firefox')) != -1) {\r\n    browser = 'Firefox';\r\n    version = nAgt.substring(verOffset + 8);\r\n  }\r\n  // MSIE 11+\r\n  else if (nAgt.indexOf('Trident/') != -1) {\r\n    browser = 'Microsoft Internet Explorer';\r\n    version = nAgt.substring(nAgt.indexOf('rv:') + 3);\r\n  }\r\n  // Other browsers\r\n  else if (\r\n    (nameOffset = nAgt.lastIndexOf(' ') + 1) < (verOffset = nAgt.lastIndexOf('/'))\r\n  ) {\r\n    browser = nAgt.substring(nameOffset, verOffset);\r\n    version = nAgt.substring(verOffset + 1);\r\n    if (browser.toLowerCase() == browser.toUpperCase()) {\r\n      browser = navigator.appName;\r\n    }\r\n  }\r\n  // trim the version string\r\n  if ((ix = version.indexOf(';')) != -1) version = version.substring(0, ix);\r\n  if ((ix = version.indexOf(' ')) != -1) version = version.substring(0, ix);\r\n  if ((ix = version.indexOf(')')) != -1) version = version.substring(0, ix);\r\n\r\n  majorVersion = parseInt('' + version, 10);\r\n  if (isNaN(majorVersion)) {\r\n    version = '' + parseFloat(navigator.appVersion);\r\n    majorVersion = parseInt(navigator.appVersion, 10);\r\n  }\r\n\r\n  // mobile version\r\n  var mobile = /Mobile|mini|Fennec|Android|iP(ad|od|hone)/.test(nVer);\r\n\r\n  // cookie\r\n  var cookieEnabled = navigator.cookieEnabled ? true : false;\r\n\r\n  if (typeof navigator.cookieEnabled == 'undefined' && !cookieEnabled) {\r\n    document.cookie = 'testcookie';\r\n    cookieEnabled = document.cookie.indexOf('testcookie') != -1 ? true : false;\r\n  }\r\n\r\n  // system\r\n  var os = unknown;\r\n  var clientStrings = [\r\n    { s: 'Windows 10', r: /(Windows 10.0|Windows NT 10.0)/ },\r\n    { s: 'Windows 8.1', r: /(Windows 8.1|Windows NT 6.3)/ },\r\n    { s: 'Windows 8', r: /(Windows 8|Windows NT 6.2)/ },\r\n    { s: 'Windows 7', r: /(Windows 7|Windows NT 6.1)/ },\r\n    { s: 'Windows Vista', r: /Windows NT 6.0/ },\r\n    { s: 'Windows Server 2003', r: /Windows NT 5.2/ },\r\n    { s: 'Windows XP', r: /(Windows NT 5.1|Windows XP)/ },\r\n    { s: 'Windows 2000', r: /(Windows NT 5.0|Windows 2000)/ },\r\n    { s: 'Windows ME', r: /(Win 9x 4.90|Windows ME)/ },\r\n    { s: 'Windows 98', r: /(Windows 98|Win98)/ },\r\n    { s: 'Windows 95', r: /(Windows 95|Win95|Windows_95)/ },\r\n    { s: 'Windows NT 4.0', r: /(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/ },\r\n    { s: 'Windows CE', r: /Windows CE/ },\r\n    { s: 'Windows 3.11', r: /Win16/ },\r\n    { s: 'Android', r: /Android/ },\r\n    { s: 'Open BSD', r: /OpenBSD/ },\r\n    { s: 'Sun OS', r: /SunOS/ },\r\n    { s: 'Chrome OS', r: /CrOS/ },\r\n    { s: 'Linux', r: /(Linux|X11(?!.*CrOS))/ },\r\n    { s: 'iOS', r: /(iPhone|iPad|iPod)/ },\r\n    { s: 'Mac OS X', r: /Mac OS X/ },\r\n    { s: 'Mac OS', r: /(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/ },\r\n    { s: 'QNX', r: /QNX/ },\r\n    { s: 'UNIX', r: /UNIX/ },\r\n    { s: 'BeOS', r: /BeOS/ },\r\n    { s: 'OS/2', r: /OS\\/2/ },\r\n    {\r\n      s: 'Search Bot',\r\n      r: /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\\/Teoma|ia_archiver)/,\r\n    },\r\n  ];\r\n  for (var id in clientStrings) {\r\n    var cs = clientStrings[id];\r\n    if (cs.r.test(nAgt)) {\r\n      os = cs.s;\r\n      break;\r\n    }\r\n  }\r\n\r\n  var osVersion = unknown;\r\n\r\n  if (/Windows/.test(os)) {\r\n    osVersion = /Windows (.*)/.exec(os)[1];\r\n    os = 'Windows';\r\n  }\r\n\r\n  switch (os) {\r\n    case 'Mac OS X':\r\n      osVersion = /Mac OS X (10[\\.\\_\\d]+)/.exec(nAgt)[1];\r\n      break;\r\n\r\n    case 'Android':\r\n      osVersion = /Android ([\\.\\_\\d]+)/.exec(nAgt)[1];\r\n      break;\r\n\r\n    case 'iOS':\r\n      osVersion = /OS (\\d+)_(\\d+)_?(\\d+)?/.exec(nVer);\r\n      osVersion = osVersion[1] + '.' + osVersion[2] + '.' + (osVersion[3] | 0);\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  // user agent string manipulation to obtain device model\r\n  var system = nAgt.substring(nAgt.indexOf('(') + 1, nAgt.indexOf(')'));\r\n  var device = system.substring(system.lastIndexOf(';') + 1);\r\n\r\n  // use JavaScript to detect GPU used from within your browser - by cvan\r\n  // https://gist.github.com/cvan/042b2448fcecefafbb6a91469484cdf8\r\n  var canvas = document.createElement('canvas');\r\n  var gl;\r\n  var debugInfo;\r\n  var gpuVendor;\r\n  var renderer;\r\n\r\n  try {\r\n    gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\r\n    // move block here if webgl not available\r\n    // if (gl) {\r\n    debugInfo = gl.getExtension('WEBGL_debug_renderer_info');\r\n    gpuVendor = gl.getParameter(debugInfo.UNMASKED_VENDOR_WEBGL);\r\n    renderer = gl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL);\r\n    // }\r\n  } catch (e) {\r\n    //   do nothing\r\n  }\r\n  // ----------------------------------------------------------------\r\n\r\n  //   window.jscd = {\r\n  return {\r\n    browser: browser,\r\n    browserVersion: majorVersion,\r\n    browserRelease: version,\r\n    // vendor: navigator.vendor,\r\n    device: device,\r\n    os: os,\r\n    osVersion: osVersion,\r\n    mobile: mobile,\r\n    platform: navigator.platform,\r\n    screen: screenSize,\r\n    dpr: +window.devicePixelRatio.toFixed(3),\r\n    gpu: renderer,\r\n    gpuVendor: gpuVendor,\r\n    userAgent: navigator.userAgent,\r\n    // cookies: cookieEnabled,\r\n    // flashVersion: flashVersion\r\n  };\r\n}\r\n// (this)\r\n\r\n// alert(\r\n//     'OS: ' + jscd.os +' '+ jscd.osVersion + '\\n' +\r\n//     'Browser: ' + jscd.browser +' '+ jscd.browserMajorVersion +\r\n//       ' (' + jscd.browserVersion + ')\\n' +\r\n//     'Mobile: ' + jscd.mobile + '\\n' +\r\n//     'Flash: ' + jscd.flashVersion + '\\n' +\r\n//     'Cookies: ' + jscd.cookies + '\\n' +\r\n//     'Screen Size: ' + jscd.screen + '\\n\\n' +\r\n//     'Full User Agent: ' + navigator.userAgent\r\n// );\r\n","// TODO set max iterations as parameter\r\n\r\nconst newSmoothJuliaShader = ({\r\n  maxI = 300,\r\n  AA = 1,\r\n  B = 64,\r\n  // crosshair = {\r\n  //     stroke: 0,\r\n  //     radius: 0\r\n  // },\r\n}) => `\r\n\r\n#define AA ${AA}\r\n#define MAXI ${maxI}\r\n#define B ${B.toFixed(1)}\r\n\r\n// set high float precision (lower than this may break colours on mobile)\r\nprecision highp float;\r\n\r\n// need to know the resolution of the canvas\r\nuniform vec2 resolution;\r\n\r\n// properties should be passed as uniforms\r\nuniform int   u_maxI;\r\nuniform vec2  u_xy;\r\nuniform vec2  u_c;\r\nuniform float u_zoom;\r\nuniform float u_theta;\r\n\r\nfloat julia( vec2 z, vec2 c ) {\r\n\r\n  float l = 0.0;\r\n  for( int i=0; i<MAXI; i++ )\r\n  {\r\n      z = vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y ) + c;\r\n      if( dot(z,z)>(B*B) ) break;\r\n      l += 1.0;\r\n  }\r\n\r\n  // maxed out iterations\r\n  if( l>float(MAXI)-1.0 ) return 0.0;\r\n\r\n  // equivalent optimized smooth interation count\r\n  l = l - log2(log2(dot(z,z))) + 4.0;\r\n\r\n  return l;\r\n}\r\n\r\nvoid main() {    \r\n  // set the initial colour to black\r\n  vec3 col = vec3(0.0);\r\n\r\n  // anti-aliasing\r\n  #if AA>1\r\n  for( int m=0; m<AA; m++ )\r\n  for( int n=0; n<AA; n++ )\r\n  {\r\n      vec2 p = (2.0*(gl_FragCoord.xy + vec2(float(m), float(n)) / float(AA) ) - resolution.xy)/resolution.y;\r\n      float w = float(AA*m+n);\r\n  #else    \r\n      // adjust pixels to range from [-1, 1]\r\n      vec2 p = (2.0*gl_FragCoord.xy - resolution.xy)/resolution.y;\r\n  #endif\r\n  \r\n  // constant \"c\" to add, based on mandelbrot position\r\n  vec2 c = u_c;\r\n  vec2 z = u_xy + p/u_zoom;\r\n\r\n  float l = julia(z, c);\r\n  col += 0.5 + 0.5*cos( 3.0 + l*0.15 + vec3(0.0,0.6,1.0));\r\n\r\n  // antialiasing\r\n  #if AA>1\r\n  }\r\n  col /= float(AA*AA);\r\n  #endif\r\n\r\n  // Output to screen\r\n  gl_FragColor = vec4( col, 1.0 );\r\n}\r\n`;\r\n\r\nexport default newSmoothJuliaShader;\r\n","import { Slider, Switch } from '@material-ui/core';\r\nimport React from 'react';\r\nimport {\r\n  settingsDefinitionsType,\r\n  settingsGroupType,\r\n  settingsWidgetType,\r\n} from '../../common/settings';\r\n\r\nexport const defaultSettings = {\r\n  showMinimap: true,\r\n  showCrosshair: true,\r\n  showCoordinates: true,\r\n  showMisiurewiczPoints: true,\r\n  maxI: 250,\r\n  showFPS: false,\r\n  useDPR: false,\r\n  useAA: false,\r\n};\r\n\r\nexport const settingsWidgets = (\r\n  settings: settingsDefinitionsType,\r\n): settingsWidgetType => ({\r\n  showMinimap: {\r\n    k: 'showMinimap',\r\n    label: 'Minimap',\r\n    checked: settings.showMinimap,\r\n    control: <Switch />,\r\n  },\r\n  showCrosshair: {\r\n    k: 'showCrosshair',\r\n    label: 'Crosshair',\r\n    checked: settings.showCrosshair,\r\n    control: <Switch />,\r\n  },\r\n  showCoordinates: {\r\n    k: 'showCoordinates',\r\n    label: 'Show coordinates',\r\n    checked: settings.showCoordinates,\r\n    control: <Switch />,\r\n  },\r\n  showMisiurewiczPoints: {\r\n    k: 'showMisiurewiczPoints',\r\n    label: 'Show Misiurewicz Points',\r\n    checked: settings.showMisiurewiczPoints,\r\n    control: <Switch />,\r\n  },\r\n  maxI: {\r\n    k: 'maxI',\r\n    label: 'Iterations',\r\n    value: settings.maxI,\r\n    labelPlacement: 'top',\r\n    style: {\r\n      marginLeft: 0,\r\n      marginRight: 0,\r\n    },\r\n    control: (\r\n      <Slider\r\n        min={10}\r\n        max={1000}\r\n        step={10}\r\n        valueLabelDisplay=\"auto\"\r\n        marks={[\r\n          { value: 10, label: 10 },\r\n          { value: 250, label: 250 },\r\n          { value: 500, label: 500 },\r\n          { value: 750, label: 750 },\r\n          { value: 1000, label: 1000 },\r\n        ]}\r\n      />\r\n    ),\r\n  },\r\n  useDPR: {\r\n    k: 'useDPR',\r\n    // https://stackoverflow.com/a/12830454/9184658\r\n    // // There is a downside that values like 1.5 will give \"1.50\" as the output. A fix suggested by @minitech:\r\n    // var numb = 1.5;\r\n    // numb = +numb.toFixed(2);\r\n    // // Note the plus sign that drops any \"extra\" zeroes at the end.\r\n    // // It changes the result (which is a string) into a number again (think \"0 + foo\"),\r\n    // // which means that it uses only as many digits as necessary.\r\n    label: `Use pixel ratio (${+window.devicePixelRatio.toFixed(3)})`,\r\n    checked: settings.useDPR,\r\n    control: <Switch />,\r\n  },\r\n  useAA: {\r\n    k: 'useAA',\r\n    label: `Anti-aliasing (slow)`,\r\n    checked: settings.useAA,\r\n    control: <Switch />,\r\n  },\r\n  showFPS: {\r\n    k: 'showFPS',\r\n    label: `Show FPS`,\r\n    checked: settings.showFPS,\r\n    control: <Switch />,\r\n  },\r\n});\r\n\r\nexport const getSettingsWidgetsGrouping = (\r\n  settingsWidgets: settingsWidgetType,\r\n): Array<settingsGroupType> => [\r\n  {\r\n    name: 'Interface',\r\n    widgets: [\r\n      settingsWidgets.showMinimap,\r\n      settingsWidgets.showCrosshair,\r\n      settingsWidgets.showCoordinates,\r\n      settingsWidgets.showMisiurewiczPoints,\r\n    ],\r\n  },\r\n  {\r\n    name: 'Graphics',\r\n    widgets: [\r\n      settingsWidgets.maxI,\r\n      settingsWidgets.useDPR,\r\n      settingsWidgets.useAA,\r\n      settingsWidgets.showFPS,\r\n    ],\r\n  },\r\n];\r\n\r\nexport default defaultSettings;\r\n","import React, { createContext, ReactNode, useState } from 'react';\r\nimport { SettingsContextType, settingsDefinitionsType } from '../../common/settings';\r\nimport defaultSettings, { settingsWidgets } from './SettingsDefinitions';\r\n\r\nexport const SettingsContext = createContext<SettingsContextType>({\r\n  // provide the context with the default values\r\n  settings: defaultSettings,\r\n  // can't set state until it's initialized\r\n  setSettings: () => {\r\n    return;\r\n  },\r\n  settingsWidgets: settingsWidgets(defaultSettings),\r\n});\r\n\r\n// export const useSettings = (): SettingsContextType => useContext(SettingsContext);\r\n\r\nexport const SettingsProvider = ({ children }: { children: ReactNode }): JSX.Element => {\r\n  // https://reactjs.org/docs/context.html#updating-context-from-a-nested-component\r\n  // no grouping: all settings are accessible\r\n  const [settings, setSettings] = useState<settingsDefinitionsType>(defaultSettings);\r\n\r\n  return (\r\n    <SettingsContext.Provider\r\n      value={{\r\n        settings,\r\n        setSettings,\r\n        settingsWidgets: settingsWidgets(settings),\r\n      }}\r\n    >\r\n      {children}\r\n    </SettingsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SettingsProvider;\r\n","import { colors, createMuiTheme } from '@material-ui/core';\r\n\r\nconst theme = createMuiTheme({\r\n  props: {\r\n    // Name of the component ⚛️\r\n    MuiSwitch: {\r\n      // The default props to change\r\n      color: 'primary', // x, on the whole application 💣!\r\n    },\r\n    MuiButton: {\r\n      variant: 'outlined',\r\n    },\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: colors.blue[700],\r\n    },\r\n    secondary: {\r\n      main: colors.red[700],\r\n    },\r\n    info: {\r\n      main: colors.blue[700],\r\n    },\r\n  },\r\n});\r\n\r\nexport const simpleBoxShadow = '0px 2px 10px 1px rgba(0, 0, 0, 0.4)';\r\n\r\nexport default theme;\r\n","export const fullVertexShader = `\r\nattribute vec4 position;\r\n\r\nvoid main() {\r\n  gl_Position = position;\r\n}\r\n`;\r\n\r\n// This \"position\" array specifies the vertex positions of the element\r\n// to be displayed by the vertex shader. It represents two triangles,\r\n// each filling half of the screen diagonally, and together filling the\r\n// full canvas space to allow the fragment shader to act on the full canvas.\r\nexport const fullscreenVertexArray = {\r\n  position: {\r\n    numComponents: 3,\r\n    data: [-1, -1, 0, 1, -1, 0, -1, 1, 0, -1, 1, 0, 1, -1, 0, 1, 1, 0],\r\n  },\r\n};\r\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport { animated } from 'react-spring';\nimport * as twgl from 'twgl.js';\nimport { vScale } from 'vec-la-fp';\nimport { WebGLCanvasProps } from '../../common/render';\nimport { screenScaleMultiplier } from '../../common/values';\nimport { fullscreenVertexArray, fullVertexShader } from '../../shaders/fullVertexShader';\nimport { misiurewiczFlat } from '../../App';\n\n// https://mariusschulz.com/blog/typing-destructured-object-parameters-in-typescript\n// https://stackoverflow.com/a/50294843/9184658\nconst WebGLCanvas = React.forwardRef<\n  HTMLCanvasElement,\n  WebGLCanvasProps & { mini?: boolean }\n>((props, refAny) => {\n  // const { mini = false, ...rest } = props;\n  // props:\n  // id\n  // fragShader\n  // -- uniforms:\n  //    u_zoom\n  //    u_pos\n  //    u_maxI\n  // ref\n  // glRef\n\n  const canvasRef = refAny as React.MutableRefObject<HTMLCanvasElement>;\n\n  const gl = useRef<WebGLRenderingContext | null>();\n  const renderRequestRef = useRef<number>();\n  const bufferInfo = useRef<twgl.BufferInfo>();\n  const programInfo = useRef<twgl.ProgramInfo>();\n\n  const u = props.u;\n  const setFps = props.fps;\n\n  // have a zoom callback\n  const zoom = useCallback(() => (props.mini ? 1.0 : props.u.zoom.getValue()), [\n    props.mini,\n    props.u.zoom,\n  ]);\n  const currZoom = useRef(zoom());\n\n  const dpr = props.useDPR ? window.devicePixelRatio : 1;\n\n  // useEffect(() => {\n  //   console.log(props.cursor?.getValue());\n  // });\n\n  // initial context-getter\n  useEffect(() => {\n    // console.log(gl);\n    // console.log(gl.current);\n    gl.current = canvasRef.current.getContext('webgl');\n  }, [canvasRef]);\n\n  useEffect(() => {\n    // console.log(`got canvas context: ${gl.current}`);\n    bufferInfo.current = twgl.createBufferInfoFromArrays(\n      gl.current as WebGLRenderingContext,\n      fullscreenVertexArray,\n    );\n  }, [gl]);\n\n  useEffect(() => {\n    currZoom.current = props.u.zoom.getValue();\n  }, [props.u]);\n\n  // re-compile program if shader changes\n  useEffect(() => {\n    programInfo.current = twgl.createProgramInfo(gl.current as WebGLRenderingContext, [\n      fullVertexShader,\n      props.fragShader,\n    ]);\n  }, [gl, props.fragShader]);\n\n  const then = useRef(0);\n  const frames = useRef(0);\n  const elapsedTime = useRef(0);\n  // fps update interval\n  const interval = 1000;\n  // const mult = 1000 / interval;\n  // the main render function for WebGL\n  const render = useCallback(\n    (time) => {\n      twgl.resizeCanvasToDisplaySize(canvasRef.current, dpr);\n      (gl.current as WebGLRenderingContext).viewport(\n        0,\n        0,\n        canvasRef.current.width,\n        canvasRef.current.height,\n      );\n\n      const uniforms = {\n        resolution: [canvasRef.current.width, canvasRef.current.height],\n        u_zoom: zoom(),\n        u_c: u.c === undefined ? 0 : vScale(screenScaleMultiplier, u.c.getValue()),\n        u_xy: vScale(screenScaleMultiplier, u.xy.getValue()),\n        u_maxI: u.maxI,\n        u_theta: u.theta?.getValue(),\n        myValues: misiurewiczFlat,\n      };\n\n      (gl.current as WebGLRenderingContext).useProgram(\n        (programInfo.current as twgl.ProgramInfo).program,\n      );\n      twgl.setBuffersAndAttributes(\n        gl.current as WebGLRenderingContext,\n        programInfo.current as twgl.ProgramInfo,\n        bufferInfo.current as twgl.BufferInfo,\n      );\n      twgl.setUniforms(programInfo.current as twgl.ProgramInfo, uniforms);\n      twgl.drawBufferInfo(\n        gl.current as WebGLRenderingContext,\n        bufferInfo.current as twgl.BufferInfo,\n      );\n\n      // calculate fps\n      if (setFps !== undefined) {\n        frames.current++;\n        elapsedTime.current += time - then.current;\n        then.current = time;\n\n        // console.log(elapsedTime.current);\n        if (elapsedTime.current >= interval) {\n          //multiply with (1000 / elapsed) for accuracy\n          setFps((frames.current * (interval / elapsedTime.current)).toFixed(1));\n          frames.current = 0;\n          elapsedTime.current -= interval;\n\n          // document.getElementById('test').innerHTML = fps;\n        }\n        // time *= 0.001;                      // convert to seconds\n        // const deltaTime = time - then.current; // compute time since last frame\n        // then.current = time;                // remember time for next frame\n        // const fs = 1 / deltaTime;           // compute frames per second\n        // console.log(fs);\n        // (fs.toFixed(1));  // update fps display\n      }\n\n      // The 'state' will always be the initial value here\n      renderRequestRef.current = requestAnimationFrame(render);\n    },\n    [gl, u, zoom, dpr, setFps, interval, canvasRef],\n  );\n\n  //\n  useEffect(() => {\n    renderRequestRef.current = requestAnimationFrame(render);\n    return () => cancelAnimationFrame(renderRequestRef.current as number);\n  }, [render]);\n\n  return (\n    <animated.canvas\n      className=\"renderer\"\n      ref={refAny}\n      style={{\n        // cursor should show whether the viewer is being grabbed\n        cursor: props.dragging ? 'grabbing' : 'grab',\n        // adding style allows direct style override\n        ...props.style,\n      }}\n    />\n  );\n});\n\nWebGLCanvas.displayName = 'WebGLCanvas';\n\nexport default WebGLCanvas;\n","import { ButtonBase, Grow } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { MinimapViewerProps } from '../../common/render';\r\nimport { simpleBoxShadow } from '../../theme/theme';\r\nimport WebGLCanvas from './WebGLCanvas';\r\n\r\nconst miniSize = 100;\r\n// TODO: make square with rounded corners?\r\nconst borderRadius = 8;\r\n\r\nconst MinimapViewer = (props: MinimapViewerProps): JSX.Element => {\r\n  const { canvasRef, onClick, show, ...rest } = props;\r\n  return (\r\n    <Grow in={show}>\r\n      <ButtonBase\r\n        style={{\r\n          position: 'absolute',\r\n          // make minimap stick out through backdrop\r\n          zIndex: 1300,\r\n          margin: '0.5rem',\r\n          left: 0,\r\n          bottom: 0,\r\n          // cursor: 'pointer',\r\n          height: miniSize,\r\n          width: miniSize,\r\n          borderRadius: borderRadius,\r\n          // border: \"1px solid #000\",\r\n          boxShadow: simpleBoxShadow,\r\n          overflow: 'hidden',\r\n          // opacity: zoom.interpolate((z) => _.clamp(z - 1, 0, 1)),\r\n          // display: zoom.interpolate((z) => (_.clamp(z - 1, 0, 1) === 0 ? 'none' : 'block')),\r\n        }}\r\n        onClick={onClick}\r\n      >\r\n        {/* <animated.div */}\r\n        {/* // \r\n      // > */}\r\n        <WebGLCanvas\r\n          mini={true}\r\n          ref={canvasRef}\r\n          {...rest}\r\n          // setting border radius here stops the canvas clickable area from overflowing\r\n          // outside the div circle, which would make the clickable area a rectangle\r\n          style={{\r\n            borderRadius: borderRadius,\r\n            // cursor should be \"pointer\" (looks clickable) if this is a minimap,\r\n            cursor: 'pointer',\r\n          }}\r\n        />\r\n        {/* </animated.div> */}\r\n      </ButtonBase>\r\n    </Grow>\r\n  );\r\n};\r\nexport default MinimapViewer;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useGesture } from 'react-use-gesture';\r\nimport { JuliaRendererProps } from '../../common/render';\r\nimport { MandelbrotMapsWebGLUniforms } from '../../common/types';\r\nimport { screenScaleMultiplier } from '../../common/values';\r\nimport newSmoothJuliaShader from '../../shaders/newSmoothJuliaShader';\r\nimport { SettingsContext } from '../settings/SettingsContext';\r\nimport { genericTouchBind } from '../utils';\r\nimport MinimapViewer from './MinimapViewer';\r\nimport WebGLCanvas from './WebGLCanvas';\r\n\r\nexport default function JuliaRenderer(props: JuliaRendererProps): JSX.Element {\r\n  // variables to hold canvas and webgl information\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const miniCanvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  // const gl = useRef();\r\n  // const miniGl = useRef();\r\n\r\n  // this multiplier subdivides the screen space into smaller increments\r\n  // to allow for velocity calculations to not immediately decay, due to the\r\n  // otherwise small scale that is being mapped to the screen.\r\n  // const screenScaleMultiplier = props.screenScaleMultiplier;\r\n\r\n  // read incoming props\r\n  const [{ xy }] = props.controls.xyCtrl;\r\n  // const [{ theta, last_pointer_angle }, setControlRot] = props.controls.rot;\r\n  const [{ z }, setControlZoom] = props.controls.zoomCtrl;\r\n  const maxI = props.maxI; // -> global\r\n  const AA = props.useAA ? 2 : 1;\r\n\r\n  const fragShader = newSmoothJuliaShader({\r\n    maxI: maxI,\r\n    AA: AA,\r\n    // showCrosshair: false,\r\n  });\r\n\r\n  const miniFragShader = newSmoothJuliaShader({\r\n    maxI: maxI,\r\n    AA: 2,\r\n    // showCrosshair: false,\r\n  });\r\n\r\n  const u: MandelbrotMapsWebGLUniforms = {\r\n    zoom: z,\r\n    xy: xy,\r\n    c: props.c,\r\n    maxI: maxI,\r\n    // screenScaleMultiplier: screenScaleMultiplier,\r\n  };\r\n\r\n  const [dragging, setDragging] = useState(false);\r\n\r\n  const gtb = genericTouchBind({\r\n    domTarget: canvasRef,\r\n    controls: props.controls,\r\n    screenScaleMultiplier:\r\n      screenScaleMultiplier / (props.useDPR ? window.devicePixelRatio : 1),\r\n    setDragging: setDragging,\r\n  });\r\n\r\n  const touchBind = useGesture(gtb.handlers, gtb.config);\r\n\r\n  useEffect(() => {\r\n    touchBind();\r\n  }, [touchBind]);\r\n\r\n  return (\r\n    <SettingsContext.Consumer>\r\n      {({ settings }) => (\r\n        <div\r\n          className=\"renderer\"\r\n          style={{\r\n            position: 'relative',\r\n          }}\r\n        >\r\n          <WebGLCanvas\r\n            id=\"julia\"\r\n            fragShader={fragShader}\r\n            useDPR={props.useDPR}\r\n            u={u}\r\n            ref={canvasRef}\r\n            dragging={dragging}\r\n          />\r\n          <MinimapViewer\r\n            fragShader={miniFragShader}\r\n            useDPR={settings.useDPR}\r\n            u={u}\r\n            canvasRef={miniCanvasRef}\r\n            onClick={() => setControlZoom({ z: 1 })}\r\n            show={settings.showMinimap}\r\n          />\r\n        </div>\r\n      )}\r\n    </SettingsContext.Consumer>\r\n  );\r\n}\r\n","// TODO set max iterations as parameter, crosshair as parameter\n\nconst makeCrosshair = (stroke: number, radius: number) => ({\n  stroke,\n  radius,\n});\n\nexport const standardCrosshair = makeCrosshair(2, 100);\nexport const miniCrosshair = makeCrosshair(1, 30);\n\nexport interface MandelbrotShaderParams {\n  maxI: number;\n  /** Radial boundary */\n  B: number;\n  /** Anti-aliasing samples */\n  AA: number;\n  showM: boolean;\n}\n\nconst newSmoothMandelbrotShader = (\n  { maxI = 300, AA = 1, B = 64, showM = false },\n  showCrosshair = true,\n  crosshairShape = {\n    stroke: 2,\n    radius: 100,\n  },\n): string => {\n  return `\n// Adapted by Joao Maio/2019, based on work by inigo quilez - iq/2013\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// See here for more information on smooth iteration count:\n// http://iquilezles.org/www/articles/mset_smooth/mset_smooth.htm\n\n#define false 0\n#define true 1\n\n// render parameters\n#define AA ${AA}\n#define MAXI ${maxI}\n#define B ${B.toFixed(1)}\n#define showM ${showM}\n\n// crosshair parameters\n#define show_crosshair ${showCrosshair}\n#define cross_stroke ${crosshairShape.stroke.toFixed(1)}\n#define cross_radius ${crosshairShape.radius.toFixed(1)}\n\n// set high float precision (lower than this may break colours on mobile)\nprecision highp float;\n\n// need to know the resolution of the canvas\nuniform vec2 resolution;\n\n// properties should be passed as uniforms\nuniform int   u_maxI;  \nuniform vec2  u_xy;\nuniform float u_zoom;\nuniform float u_theta;\nuniform float myValues[8];\n\nbool crosshair( float x, float y ) {\n  float abs_x = abs(2.0*x - resolution.x);\n  float abs_y = abs(2.0*y - resolution.y);\n\n  return \n  // crosshair in centre of screen\n  (abs_x <= cross_stroke || abs_y <= cross_stroke) &&\n  // crosshair size / \"radius\"\n  (abs_x <= cross_radius && abs_y <= cross_radius);\n}\n\nfloat mandelbrot( in vec2 c ) {\n    if (showM == true) {\n      for( int i=0; i<8; i+=2 )\n      {\n        float d = pow(distance(c, vec2(myValues[i], myValues[i+1])), 2.0);\n        if (d < 0.01 && d > 0.007) return 100.0;\n      }\n    }\n\n    {\n        float c2 = dot(c, c);\n        // skip computation inside M1 - http://iquilezles.org/www/articles/mset_1bulb/mset1bulb.htm\n        if( 256.0*c2*c2 - 96.0*c2 + 32.0*c.x - 3.0 < 0.0 ) return 0.0;\n        // skip computation inside M2 - http://iquilezles.org/www/articles/mset_2bulb/mset2bulb.htm\n        if( 16.0*(c2+2.0*c.x+1.0) - 1.0 < 0.0 ) return 0.0;\n    }\n\n    float l = 0.0;\n    vec2 z  = vec2(0.0);\n    for( int i=0; i<MAXI; i++ )\n    {\n        z = vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y ) + c;\n        if( dot(z,z)>(B*B) ) break;\n        l += 1.0;\n    }\n\n    // maxed out iterations\n    if( l>float(MAXI)-1.0 ) return 0.0;\n    \n    // optimized smooth interation count\n    l = l - log2(log2(dot(z,z))) + 4.0;\n\n    return l;\n}\n\nvoid main() {    \n    // set the initial colour to black\n    vec3 col = vec3(0.0);\n\n    // anti-aliasing\n    #if AA>1\n    for( int m=0; m<AA; m++ )\n    for( int n=0; n<AA; n++ )\n    {\n        // vec2 p = (-iResolution.xy + 2.0*(fragCoord.xy+vec2(float(m),float(n))/float(AA)))/iResolution.y;\n        vec2 p = (2.0*(gl_FragCoord.xy + vec2(float(m), float(n)) / float(AA) ) - resolution.xy)/resolution.y;\n        float w = float(AA*m+n);\n    #else    \n        // adjust pixels to range from [-1, 1]\n        vec2 p = (2.0*gl_FragCoord.xy - resolution.xy)/resolution.y;\n    #endif\n\n    float sinT = sin(u_theta);\n    float cosT = cos(u_theta);\n\n    vec2 xy = vec2( p.x*cosT - p.y*sinT, p.x*sinT + p.y*cosT );\n    // c is based on offset and grid position, z_0 = 0\n    vec2 c = u_xy + xy/u_zoom;\n    \n    float l = mandelbrot(c);\n    col += 0.5 + 0.5*cos( 3.0 + l*0.15 + vec3(0.0,0.6,1.0));\n\n    // antialiasing\n    #if AA>1\n    }\n    col /= float(AA*AA);\n    #endif\n\n    #if show_crosshair\n    if (crosshair(gl_FragCoord.x, gl_FragCoord.y)) {\n        col = 1. - col;\n    }\n    #endif\n\n    // Output to screen\n    gl_FragColor = vec4( col, 1.0 );\n}\n    `;\n};\n\nexport default newSmoothMandelbrotShader;\n","import { Card, Grow } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { animated } from 'react-spring';\r\nimport { FPSCardProps } from '../../common/info';\r\n\r\nconst FPSCard = (props: FPSCardProps): JSX.Element => (\r\n  <Grow in={props.show}>\r\n    <Card\r\n      style={{\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        padding: '4px 12px',\r\n        margin: 6,\r\n        fontFamily: 'monospace',\r\n        borderRadius: 100,\r\n        fontSize: '1.8rem',\r\n        zIndex: 1300,\r\n        userSelect: 'none',\r\n      }}\r\n    >\r\n      <animated.div>{props.fps}</animated.div>\r\n    </Card>\r\n  </Grow>\r\n);\r\n\r\nexport default FPSCard;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useGesture } from 'react-use-gesture';\r\nimport { MandelbrotRendererProps } from '../../common/render';\r\nimport { screenScaleMultiplier } from '../../common/values';\r\nimport newSmoothMandelbrotShader, {\r\n  miniCrosshair,\r\n  standardCrosshair,\r\n} from '../../shaders/newSmoothMandelbrotShader';\r\nimport FPSCard from '../info/FPSCard';\r\nimport { SettingsContext } from '../settings/SettingsContext';\r\nimport { genericTouchBind } from '../utils';\r\nimport MinimapViewer from './MinimapViewer';\r\nimport WebGLCanvas from './WebGLCanvas';\r\n\r\nexport default function MandelbrotRenderer(props: MandelbrotRendererProps): JSX.Element {\r\n  // variables to hold canvas and webgl information\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const miniCanvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  // const gl = useRef<WebGLRenderingContext>(null);\r\n  // const miniGl = useRef<WebGLRenderingContext>(null);\r\n\r\n  // this multiplier subdivides the screen space into smaller increments\r\n  // to allow for velocity calculations to not immediately decay, due to the\r\n  // otherwise small scale that is being mapped to the screen.\r\n  // const screenScaleMultiplier = props.screenScaleMultiplier; // -> global\r\n\r\n  // temporary bounds to prevent excessive panning\r\n  // eslint-disable-next-line\r\n  const radialBound = 1;\r\n  // const relativeRadialBound = radialBound;// / -screenScaleMultiplier;\r\n\r\n  // read incoming props\r\n  const [{ xy }] = props.controls.xyCtrl;\r\n  // const [{ theta, last_pointer_angle }, setControlRot] = props.controls.rot;\r\n  const [{ z }, setControlZoom] = props.controls.zoomCtrl;\r\n  const [{ theta }] = props.controls.rotCtrl;\r\n  const maxI = props.maxI; // -> global\r\n  const AA = props.useAA ? 2 : 1; // -> global\r\n\r\n  const fragShader = newSmoothMandelbrotShader(\r\n    {\r\n      maxI: maxI,\r\n      AA: AA,\r\n      showM: props.showMisiurewiczPoints,\r\n    },\r\n    props.showCrosshair,\r\n    standardCrosshair,\r\n  );\r\n  const miniFragShader = newSmoothMandelbrotShader(\r\n    {\r\n      maxI: maxI,\r\n      AA: 2,\r\n    },\r\n    props.showCrosshair,\r\n    miniCrosshair,\r\n  );\r\n\r\n  const [dragging, setDragging] = useState(false);\r\n\r\n  const gtb = genericTouchBind({\r\n    domTarget: canvasRef,\r\n    controls: props.controls,\r\n    screenScaleMultiplier:\r\n      screenScaleMultiplier / (props.useDPR ? window.devicePixelRatio : 1), // -> global\r\n    // gl: gl,\r\n    setDragging: setDragging,\r\n  });\r\n\r\n  const touchBind = useGesture(gtb.handlers, gtb.config);\r\n\r\n  useEffect(() => {\r\n    touchBind();\r\n  }, [touchBind]);\r\n\r\n  const [fps, setFps] = useState('');\r\n\r\n  return (\r\n    <SettingsContext.Consumer>\r\n      {({ settings }) => (\r\n        <div\r\n          className=\"renderer\"\r\n          style={{\r\n            position: 'relative',\r\n          }}\r\n        >\r\n          <FPSCard fps={fps} show={settings.showFPS} />\r\n\r\n          <WebGLCanvas\r\n            id=\"mandelbrot\"\r\n            fragShader={fragShader}\r\n            useDPR={settings.useDPR}\r\n            // touchBind={touchBind}\r\n            u={{\r\n              zoom: z,\r\n              xy: xy,\r\n              theta: theta,\r\n              maxI: maxI,\r\n              // screenScaleMultiplier: screenScaleMultiplier,\r\n            }}\r\n            ref={canvasRef}\r\n            // glRef={gl}\r\n            fps={setFps}\r\n            dragging={dragging}\r\n          />\r\n\r\n          <MinimapViewer\r\n            fragShader={miniFragShader}\r\n            useDPR={settings.useDPR}\r\n            u={{\r\n              zoom: z,\r\n              xy: xy,\r\n              theta: theta,\r\n              maxI: maxI,\r\n              // screenScaleMultiplier: screenScaleMultiplier,\r\n            }}\r\n            canvasRef={miniCanvasRef}\r\n            // glRef={miniGl}\r\n            show={settings.showMinimap}\r\n            onClick={() => setControlZoom({ z: 1 })}\r\n          />\r\n        </div>\r\n      )}\r\n    </SettingsContext.Consumer>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// https://felixgerschau.com/create-a-pwa-update-notification-with-create-react-app/\r\n\r\nimport { Button, Snackbar } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport React, { FC, useEffect } from 'react';\r\nimport * as serviceWorker from '../serviceWorker';\r\n\r\nconst ServiceWorkerWrapper: FC = () => {\r\n  const [showReload, setShowReload] = React.useState(false);\r\n  const [waitingWorker, setWaitingWorker] = React.useState<ServiceWorker | null>(null);\r\n\r\n  const onSWUpdate = (registration: ServiceWorkerRegistration) => {\r\n    console.log('Out of date version detected! Triggering snackbar.');\r\n    setShowReload(true);\r\n    setWaitingWorker(registration.waiting);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('Registering Service Worker for update detection...');\r\n    serviceWorker.register({ onUpdate: onSWUpdate });\r\n  }, []);\r\n\r\n  const reloadPage = () => {\r\n    // optional chaining was not working here...\r\n    // https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html\r\n    waitingWorker && waitingWorker.postMessage({ type: 'SKIP_WAITING' });\r\n    setShowReload(false);\r\n    // reload(b: Boolean) is deprecated\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <Snackbar open={showReload} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\r\n      <Alert\r\n        severity=\"info\"\r\n        action={\r\n          <Button color=\"inherit\" variant=\"outlined\" size=\"small\" onClick={reloadPage}>\r\n            Update\r\n          </Button>\r\n        }\r\n      >\r\n        A new version is available!\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default ServiceWorkerWrapper;\r\n","import {\r\n  Backdrop,\r\n  Divider,\r\n  Fab,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Grid,\r\n  makeStyles,\r\n  Popover,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport React, { useState } from 'react';\r\nimport { SettingsMenuProps } from '../../common/settings';\r\nimport { SettingsContext } from './SettingsContext';\r\nimport { getSettingsWidgetsGrouping } from './SettingsDefinitions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    zIndex: 2,\r\n  },\r\n  button: {\r\n    padding: '6px 12px',\r\n    marginTop: 10,\r\n  },\r\n  sliderControl: {\r\n    width: 30,\r\n  },\r\n}));\r\n\r\nconst GroupDivider = () => <Divider style={{ marginTop: 10, marginBottom: 4 }} />;\r\nconst GroupTitle = (props: { title: string }) => (\r\n  <Typography variant=\"overline\" style={{ fontSize: 14, marginBottom: 4 }}>\r\n    {props.title}\r\n  </Typography>\r\n);\r\n\r\nexport default function SettingsMenu(props: SettingsMenuProps): JSX.Element {\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = useState<EventTarget & HTMLButtonElement>();\r\n\r\n  // interface BottomButtonProps extends {\r\n  //   icon: JSX.Element;\r\n  //   text: string;\r\n  //   color: 'inherit' | 'default' | 'primary' | 'secondary' | undefined;\r\n  //   onClick: () => void;\r\n  // }\r\n  // const BottomButton = (props: BottomButtonProps) => (\r\n  //   <Button\r\n  //     variant=\"outlined\"\r\n  //     color={props.color}\r\n  //     aria-controls={props.text.toLowerCase()}\r\n  //     onClick={() => props.onClick()}\r\n  //     className={classes.button}\r\n  //     startIcon={<MyLocationIcon />}\r\n  //   >\r\n  //     Reset\r\n  //   </Button>\r\n  // );\r\n\r\n  const ResetButton = () => (\r\n    <Button\r\n      startIcon={<MyLocationIcon />}\r\n      color=\"secondary\"\r\n      aria-controls=\"reset\"\r\n      onClick={() => {\r\n        props.reset();\r\n      }}\r\n      className={classes.button}\r\n    >\r\n      Reset\r\n    </Button>\r\n  );\r\n  const AboutButton = () => (\r\n    <Button\r\n      startIcon={<InfoIcon />}\r\n      color=\"primary\"\r\n      aria-controls=\"about\"\r\n      onClick={() => {\r\n        props.toggleInfo();\r\n        setAnchorEl(undefined);\r\n      }}\r\n      className={classes.button}\r\n    >\r\n      About\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Fab\r\n        aria-controls=\"menu\"\r\n        aria-haspopup=\"true\"\r\n        aria-label=\"settings\"\r\n        size=\"small\"\r\n        onClick={(e) => setAnchorEl(e.currentTarget)}\r\n        // className={classes.button}\r\n      >\r\n        <SettingsIcon />\r\n      </Fab>\r\n      <Backdrop open={Boolean(anchorEl)}>\r\n        <Popover\r\n          id=\"menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={() => setAnchorEl(undefined)}\r\n          anchorOrigin={{\r\n            horizontal: 'right',\r\n            vertical: 'bottom',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n          }}\r\n        >\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            style={{\r\n              paddingLeft: '1.5em',\r\n              paddingRight: '1.5em',\r\n              paddingTop: '1em',\r\n              paddingBottom: '1em',\r\n            }}\r\n          >\r\n            <Grid item container alignItems=\"center\" justify=\"space-around\">\r\n              <Grid item>\r\n                <Typography variant=\"h1\" style={{ fontSize: 20, padding: 10 }}>\r\n                  Configuration\r\n                </Typography>\r\n              </Grid>\r\n              {/* <Divider orientation=\"vertical\" flexItem /> */}\r\n              {/* <Grid item>\r\n                <IconButton\r\n                  aria-label=\"info\"\r\n                  size=\"medium\"\r\n                  onClick={() => {\r\n                    // open info panel\r\n                    props.toggleInfo();\r\n                    // close popover\r\n                    setAnchorEl(undefined);\r\n                  }}\r\n                >\r\n                  <InfoIcon fontSize=\"inherit\" />\r\n                </IconButton>\r\n              </Grid> */}\r\n            </Grid>\r\n            <SettingsContext.Consumer>\r\n              {({ setSettings, settingsWidgets }) =>\r\n                getSettingsWidgetsGrouping(settingsWidgets).map((g) => (\r\n                  <Grid item key={g.name}>\r\n                    <GroupDivider />\r\n                    <GroupTitle title={g.name} />\r\n                    <FormGroup>\r\n                      {g.widgets.map((widget) => (\r\n                        <FormControlLabel\r\n                          key={`${widget.label}-control`}\r\n                          style={{ userSelect: 'none' }}\r\n                          {...widget}\r\n                          onChange={(e, val) => {\r\n                            console.log(`${widget.k} -> ${val}`);\r\n                            setSettings((prevState) => ({\r\n                              ...prevState,\r\n                              [widget.k]: val,\r\n                            }));\r\n                          }}\r\n                        />\r\n                      ))}\r\n                    </FormGroup>\r\n                  </Grid>\r\n                ))\r\n              }\r\n            </SettingsContext.Consumer>\r\n\r\n            <GroupDivider />\r\n\r\n            <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"stretch\">\r\n              <Grid item>\r\n                <ResetButton />\r\n              </Grid>\r\n              <Grid item style={{ width: '0.5rem' }} />\r\n              <Grid item>\r\n                <AboutButton />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* <Button\r\n              aria-controls=\"reset\"\r\n              onClick={() => props.reset()}\r\n              className={classes.button}\r\n              startIcon={<MyLocationIcon />}\r\n            >\r\n              Reset\r\n            </Button> */}\r\n            {/* <Grid item xs>\r\n                <Button\r\n                  aria-controls=\"reset\"\r\n                  onClick={() => props.reset()}\r\n                  className={classes.button}\r\n                  startIcon={<MyLocationIcon />}\r\n                >\r\n                  Reset\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <Button\r\n                  aria-label=\"info\"\r\n                  size=\"medium\"\r\n                  onClick={() => {\r\n                    // open info panel\r\n                    props.toggleInfo();\r\n                    // close popover\r\n                    setAnchorEl(undefined);\r\n                  }}\r\n                  className={classes.button}\r\n                  startIcon={<InfoIcon />}\r\n                >\r\n                  About\r\n                </Button>\r\n              </Grid> */}\r\n          </Grid>\r\n        </Popover>\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}\r\n","import { Grid, ThemeProvider } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { OpaqueInterpolation, useSpring } from 'react-spring';\nimport { vScale } from 'vec-la-fp';\nimport './App.css';\nimport {\n  ViewerRotationControl,\n  ViewerXYControl,\n  ViewerZoomControl,\n  ZoomType,\n} from './common/types';\nimport {\n  screenScaleMultiplier,\n  springsConfigs,\n  startPos,\n  startTheta,\n  startZoom,\n  viewerOrigin,\n} from './common/values';\nimport ChangeCoordinatesCard from './components/info/ChangeCoordinatesCard';\nimport CoordinatesCard from './components/info/CoordinatesCard';\nimport ChangeMisiurewiczCard from './components/info/ChangeMisiurewiczCard';\nimport InfoDialog from './components/info/InfoDialog';\nimport JuliaRenderer from './components/render/JuliaRenderer';\n// import 'typeface-roboto';\nimport MandelbrotRenderer from './components/render/MandelbrotRenderer';\nimport ServiceWorkerWrapper from './components/ServiceWorkerWrapper';\nimport SettingsProvider, { SettingsContext } from './components/settings/SettingsContext';\nimport SettingsMenu from './components/settings/SettingsMenu';\nimport { useWindowSize, warpToPoint } from './components/utils';\nimport theme from './theme/theme';\n\n// coordinates of each point, along with zoom and theta\nexport const misiurewiczPoints: [[number, number], number, number][] = [\n  [[-0.562204, 0.6428146], 100, 0.3],\n  [[-0.1010963, 0.9562867], 200, 0.3],\n  [[-2, 0], 70, 0],\n  [[-0.9870042, -0.3129012], 1900, 0.6],\n];\n\nexport const misiurewiczFlat: number[] = [\n  -0.562204,\n  0.6428146,\n  -0.1010963,\n  0.9562867,\n  -2,\n  0,\n  -0.9870042,\n  -0.3129012,\n];\nfunction App(): JSX.Element {\n  const size = useWindowSize();\n\n  // this multiplier subdivides the screen space into smaller increments\n  // to allow for velocity calculations to not immediately decay, due to the\n  // otherwise small scale that is being mapped to the screen.\n\n  const mandelbrotControls = {\n    xyCtrl: useSpring<ViewerXYControl>(() => ({\n      xy: vScale(1 / screenScaleMultiplier, startPos),\n      config: springsConfigs.default.xy,\n    })),\n\n    zoomCtrl: useSpring<ViewerZoomControl>(() => ({\n      z: startZoom,\n      minZoom: 0.5,\n      maxZoom: 100000,\n      config: springsConfigs.default.zoom,\n    })),\n\n    rotCtrl: useSpring<ViewerRotationControl>(() => ({\n      theta: startTheta, // should this be rad or deg? rad\n      config: springsConfigs.default.rot,\n    })),\n  };\n\n  const juliaControls = {\n    xyCtrl: useSpring<ViewerXYControl>(() => ({\n      xy: [0, 0] as [number, number],\n      config: springsConfigs.default.xy,\n    })),\n\n    zoomCtrl: useSpring<ViewerZoomControl>(() => ({\n      z: 0.5 as number,\n      minZoom: 0.5,\n      maxZoom: 2000,\n      config: springsConfigs.default.zoom,\n    })),\n\n    rotCtrl: useSpring<ViewerRotationControl>(() => ({\n      theta: 0, // should this be rad or deg? rad\n      config: springsConfigs.default.rot,\n    })),\n  };\n\n  const reset = () => {\n    warpToPoint(mandelbrotControls, viewerOrigin);\n    warpToPoint(juliaControls, viewerOrigin);\n  };\n\n  const [showInfo, setShowInfo] = useState(false);\n\n  const toggleInfo = () => setShowInfo(!showInfo);\n\n  // const { settings } = useSettings();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ServiceWorkerWrapper />\n      <SettingsProvider>\n        <Grid container>\n          <SettingsContext.Consumer>\n            {({ settings }) => (\n              <Grid\n                item\n                container\n                direction={\n                  (size.width || 1) < (size.height || 0) ? 'column-reverse' : 'row'\n                }\n                justify=\"center\"\n                className=\"fullSize\"\n                style={{\n                  position: 'absolute',\n                }}\n              >\n                <div\n                  style={{\n                    position: 'absolute',\n                    left: 0,\n                    top: 0,\n                    margin: 20,\n                    width: 'auto',\n                  }}\n                >\n                  <ChangeMisiurewiczCard\n                    show={settings.showMisiurewiczPoints}\n                    mandelbrot={mandelbrotControls}\n                    julia={juliaControls}\n                  />\n                </div>\n                <div\n                  style={{\n                    position: 'absolute',\n                    right: 0,\n                    top: 0,\n                    margin: 20,\n                    width: 'auto',\n                  }}\n                >\n                  <CoordinatesCard\n                    show={settings.showCoordinates}\n                    mandelbrot={{\n                      xy: mandelbrotControls.xyCtrl[0].xy,\n                      zoom: mandelbrotControls.zoomCtrl[0].z as OpaqueInterpolation<\n                        ZoomType\n                      >,\n                      theta: mandelbrotControls.rotCtrl[0].theta,\n                    }}\n                  />\n                  <ChangeCoordinatesCard\n                    show={settings.showCoordinates}\n                    mandelbrot={mandelbrotControls}\n                  />\n                </div>\n                <Grid item xs className=\"renderer\">\n                  <MandelbrotRenderer controls={mandelbrotControls} {...settings} />\n                </Grid>\n                <Grid item xs className=\"renderer\">\n                  <JuliaRenderer\n                    c={mandelbrotControls.xyCtrl[0].xy}\n                    controls={juliaControls}\n                    {...settings}\n                  />\n                </Grid>\n              </Grid>\n            )}\n          </SettingsContext.Consumer>\n\n          <SettingsMenu reset={() => reset()} toggleInfo={() => toggleInfo()} />\n\n          <InfoDialog ctrl={[showInfo, setShowInfo]} />\n        </Grid>\n      </SettingsProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.register();\r\n"],"sourceRoot":""}